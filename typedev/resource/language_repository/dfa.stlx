// determines whether or not a dfa accepts a word
dfa := procedure(D, w) {
  msg(D);
  // set the current state to the dfa's start state
  q := D[4];
  // update the current state by applying the dfa's function to each character of the word
  for (c in w) {
    nPrint("d(" + q + "," + c + ") = ");
    q := D[3](q,c);
    print(q);
  }
  // check that the final state is in the dfa's accepted state set
  return q in D[5];
}; 

// determines how a set of states should expand by following all Îµ arrows
E := procedure(d, qs) {
  do {
    // save previous state set
    pqs := qs;
    // add all states reachable by epsilon arrows to the state set
    for (q in qs) {
      qs := qs + d(q, "");
    }
  // repeat until no new states are added anymore
  } while (qs != pqs);
  return qs;
};